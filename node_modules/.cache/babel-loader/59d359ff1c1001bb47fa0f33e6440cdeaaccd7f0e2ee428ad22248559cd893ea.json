{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyanjun/react-project/mail/src/components/sendBox/index.tsx\";\nimport React from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SendBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contentEditable = void 0;\n    this.state = void 0;\n    this.handleChange = evt => {\n      this.setState({\n        html: evt.target.value\n      });\n      this.props.onHandleContent(evt.target.value);\n    };\n    this.handleKeyDown = evt => {\n      this.props.onHandleKeyDown(evt);\n    };\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(ContentEditable, {\n        innerRef: this.contentEditable,\n        html: this.state.html // innerHTML of the editable div\n        ,\n        disabled: false // use true to disable editing\n        ,\n        onChange: this.handleChange // handle innerHTML change\n        ,\n        tagName: \"article\" // Use a custom HTML tag (uses a div by default)\n        ,\n        onKeyDown: this.handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this);\n    };\n    this.contentEditable = /*#__PURE__*/React.createRef();\n    this.state = {\n      html: ''\n    };\n  }\n  componentDidMount() {\n    this.props.onRef && this.props.onRef(this.contentEditable);\n  }\n  shouldComponentUpdate(nextProps) {\n    const ref = this.contentEditable.current;\n    return nextProps.value !== ref.innerHTML;\n  }\n  componentDidUpdate() {\n    const ref = this.contentEditable.current;\n    if (this.props.smartContent !== ref.innerHTML) {\n      ref.innerHTML = this.props.smartContent;\n    }\n  }\n}\nexport default SendBox;","map":{"version":3,"names":["React","ContentEditable","jsxDEV","_jsxDEV","SendBox","Component","constructor","props","contentEditable","state","handleChange","evt","setState","html","target","value","onHandleContent","handleKeyDown","onHandleKeyDown","render","innerRef","disabled","onChange","tagName","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","createRef","componentDidMount","onRef","shouldComponentUpdate","nextProps","ref","current","innerHTML","componentDidUpdate","smartContent"],"sources":["/Users/zhangyanjun/react-project/mail/src/components/sendBox/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\ntype IProps = {\r\n  onHandleContent: (content: string) => void\r\n  onHandleKeyDown: (e: React.KeyboardEvent<HTMLDivElement>) => void\r\n  smartContent: string\r\n  value?: string\r\n  onRef?: (ref: React.RefObject<HTMLDivElement>) => void\r\n}\r\nclass SendBox extends React.Component<IProps> {\r\n  contentEditable: React.RefObject<HTMLDivElement>\r\n  state: { html: string }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.contentEditable = React.createRef()\r\n    this.state = { html: '' }\r\n  }\r\n  componentDidMount(): void {\r\n    this.props.onRef && this.props.onRef(this.contentEditable)\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n    const ref = this.contentEditable.current as unknown as HTMLDivElement\r\n    return nextProps.value !== ref.innerHTML\r\n  }\r\n  componentDidUpdate() {\r\n    const ref = this.contentEditable.current as unknown as HTMLDivElement\r\n    if (this.props.smartContent !== ref.innerHTML) {\r\n      ref.innerHTML = this.props.smartContent\r\n    }\r\n  }\r\n  handleChange = (evt) => {\r\n    this.setState({ html: evt.target.value })\r\n    this.props.onHandleContent(evt.target.value)\r\n  }\r\n  handleKeyDown = (evt) => {\r\n    this.props.onHandleKeyDown(evt)\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <ContentEditable\r\n        innerRef={this.contentEditable as unknown as () => void}\r\n        html={this.state.html} // innerHTML of the editable div\r\n        disabled={false} // use true to disable editing\r\n        onChange={this.handleChange} // handle innerHTML change\r\n        tagName='article' // Use a custom HTML tag (uses a div by default)\r\n        onKeyDown={this.handleKeyDown}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default SendBox\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASnD,MAAMC,OAAO,SAASJ,KAAK,CAACK,SAAS,CAAS;EAI5CC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAA,KAJdC,eAAe;IAAA,KACfC,KAAK;IAAA,KAoBLC,YAAY,GAAIC,GAAG,IAAK;MACtB,IAAI,CAACC,QAAQ,CAAC;QAAEC,IAAI,EAAEF,GAAG,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;MACzC,IAAI,CAACR,KAAK,CAACS,eAAe,CAACL,GAAG,CAACG,MAAM,CAACC,KAAK,CAAC;IAC9C,CAAC;IAAA,KACDE,aAAa,GAAIN,GAAG,IAAK;MACvB,IAAI,CAACJ,KAAK,CAACW,eAAe,CAACP,GAAG,CAAC;IACjC,CAAC;IAAA,KAEDQ,MAAM,GAAG,MAAM;MACb,oBACEhB,OAAA,CAACF,eAAe;QACdmB,QAAQ,EAAE,IAAI,CAACZ,eAAyC;QACxDK,IAAI,EAAE,IAAI,CAACJ,KAAK,CAACI,IAAK,CAAC;QAAA;QACvBQ,QAAQ,EAAE,KAAM,CAAC;QAAA;QACjBC,QAAQ,EAAE,IAAI,CAACZ,YAAa,CAAC;QAAA;QAC7Ba,OAAO,EAAC,SAAS,CAAC;QAAA;QAClBC,SAAS,EAAE,IAAI,CAACP;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAEN,CAAC;IAnCC,IAAI,CAACpB,eAAe,gBAAGR,KAAK,CAAC6B,SAAS,CAAC,CAAC;IACxC,IAAI,CAACpB,KAAK,GAAG;MAAEI,IAAI,EAAE;IAAG,CAAC;EAC3B;EACAiB,iBAAiBA,CAAA,EAAS;IACxB,IAAI,CAACvB,KAAK,CAACwB,KAAK,IAAI,IAAI,CAACxB,KAAK,CAACwB,KAAK,CAAC,IAAI,CAACvB,eAAe,CAAC;EAC5D;EACAwB,qBAAqBA,CAACC,SAAS,EAAE;IAC/B,MAAMC,GAAG,GAAG,IAAI,CAAC1B,eAAe,CAAC2B,OAAoC;IACrE,OAAOF,SAAS,CAAClB,KAAK,KAAKmB,GAAG,CAACE,SAAS;EAC1C;EACAC,kBAAkBA,CAAA,EAAG;IACnB,MAAMH,GAAG,GAAG,IAAI,CAAC1B,eAAe,CAAC2B,OAAoC;IACrE,IAAI,IAAI,CAAC5B,KAAK,CAAC+B,YAAY,KAAKJ,GAAG,CAACE,SAAS,EAAE;MAC7CF,GAAG,CAACE,SAAS,GAAG,IAAI,CAAC7B,KAAK,CAAC+B,YAAY;IACzC;EACF;AAqBF;AACA,eAAelC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}