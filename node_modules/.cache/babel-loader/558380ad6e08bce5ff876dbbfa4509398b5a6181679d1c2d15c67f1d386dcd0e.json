{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyanjun/react-project/mail/src/components/reply/index.tsx\";\nimport React from 'react';\nimport reply from '@/assets/images/reply.png';\nimport reply1 from '@/assets/images/reply1.png';\nimport refresh from '@/assets/images/refresh.png';\nimport styles from './index.module.less';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let replyType = /*#__PURE__*/function (replyType) {\n  replyType[replyType[\"One\"] = 1] = \"One\";\n  replyType[replyType[\"Two\"] = 2] = \"Two\";\n  replyType[replyType[\"Three\"] = 3] = \"Three\";\n  replyType[replyType[\"Four\"] = 4] = \"Four\";\n  return replyType;\n}({});\nconst Replay = props => {\n  const {\n    type,\n    content,\n    onHandleRefresh,\n    onCopy,\n    loading\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.smartContentItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.smartContentItemTitle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: type === replyType.One || replyType.Two ? reply : reply1,\n          className: styles.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), type === replyType.Three ? '进一步建议' : type === replyType.Two ? '基础回复2' : type === replyType.One ? '基础回复1' : '为您匹配以下内容']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: refresh,\n          className: styles.refreshImg,\n          onClick: () => onHandleRefresh(type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loading,\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.smartContentItemContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.text,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), type !== replyType.Three && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.use,\n        onClick: () => onCopy(content),\n        children: \"\\u4F7F\\u7528\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Replay;\nexport default Replay;\nvar _c;\n$RefreshReg$(_c, \"Replay\");","map":{"version":3,"names":["React","reply","reply1","refresh","styles","Spin","jsxDEV","_jsxDEV","replyType","Replay","props","type","content","onHandleRefresh","onCopy","loading","className","smartContentItem","children","smartContentItemTitle","src","One","Two","img","fileName","_jsxFileName","lineNumber","columnNumber","Three","refreshImg","onClick","size","smartContentItemContent","text","use","_c","$RefreshReg$"],"sources":["/Users/zhangyanjun/react-project/mail/src/components/reply/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport reply from '@/assets/images/reply.png'\r\nimport reply1 from '@/assets/images/reply1.png'\r\nimport refresh from '@/assets/images/refresh.png'\r\nimport styles from './index.module.less'\r\nimport { Spin } from 'antd'\r\ninterface IProps {\r\n  type: number\r\n  content: string\r\n  onHandleRefresh: (type: number) => void\r\n  onCopy: (content: string) => void\r\n  loading: boolean\r\n}\r\nexport enum replyType {\r\n  One = 1,\r\n  Two = 2,\r\n  Three = 3,\r\n  Four = 4,\r\n}\r\nconst Replay = (props: IProps) => {\r\n  const { type, content, onHandleRefresh, onCopy, loading } = props\r\n  return (\r\n    <div className={styles.smartContentItem}>\r\n      <div className={styles.smartContentItemTitle}>\r\n        <div>\r\n          <img\r\n            src={type === replyType.One || replyType.Two ? reply : reply1}\r\n            className={styles.img}\r\n          />\r\n          {type === replyType.Three\r\n            ? '进一步建议'\r\n            : type === replyType.Two\r\n            ? '基础回复2'\r\n            : type === replyType.One\r\n            ? '基础回复1'\r\n            : '为您匹配以下内容'}\r\n        </div>\r\n        <div>\r\n          <img\r\n            src={refresh}\r\n            className={styles.refreshImg}\r\n            onClick={() => onHandleRefresh(type)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {loading ? (\r\n        <div className={styles.loading}>\r\n          <Spin size='large' />\r\n        </div>\r\n      ) : (\r\n        <div className={styles.smartContentItemContent}>\r\n          <div className={styles.text}>{content}</div>\r\n          {type !== replyType.Three && (\r\n            <div className={styles.use} onClick={() => onCopy(content)}>\r\n              使用\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default Replay\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}