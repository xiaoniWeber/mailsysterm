{"ast":null,"code":"/**\r\n *\r\n *  去除其他所有html标签\r\n * 删除空格换行\r\n * @param msg\r\n * @returns {XML|string|void}\r\n */\n\nexport function delHtmlTag(msg) {\n  msg = msg.replace(/<\\/?[^>]*>/g, ''); //去除HTML Tag\n  msg = msg.replace(/[|]*\\n/, ''); //去除行尾空格\n  msg = msg.replace(/&npsp;/gi, ''); //去掉npsp\n  msg = msg.replace(/&amp;/gi, ''); //去掉&\n  msg = msg.replace(/&quot;/gi, ''); //去掉\"\n  msg = msg.replace(/&lt;/gi, ''); //去掉<\n  msg = msg.replace(/&gt;/gi, ''); //去掉>\n  msg = msg.replace(/[\\r\\n]/g, ''); //去掉换行符\n  return msg;\n}\n\n/**\r\n * 空判断\r\n * @param v\r\n * @returns {boolean}\r\n */\n\nexport function isEmpty(v) {\n  return v === undefined || v === null || v === '' || Array.isArray(v) && v.length === 0 || typeof v === 'object' && Object.keys(v).length === 0;\n}\n\n// 截取字符串的第一个中文字或者英文第一个字母\n\nexport function getFirstLetter(str) {\n  if (isEmpty(str)) {\n    return '';\n  }\n  let result = '';\n  const reg = /^[a-zA-Z]/;\n  if (reg.test(str)) {\n    result = str.substr(0, 1).toUpperCase();\n  } else {\n    result = str.substr(0, 1);\n  }\n  return result;\n}\n//获取指定字符串前面的字符\n\nexport const getString = (string, specialStr) => {\n  const index = string.indexOf(specialStr);\n  return string.substring(0, index);\n};\n\n//截取 2023-11-10 11:23:21\n\nexport const getTime = time => {\n  return time.substring(10);\n};","map":{"version":3,"names":["delHtmlTag","msg","replace","isEmpty","v","undefined","Array","isArray","length","Object","keys","getFirstLetter","str","result","reg","test","substr","toUpperCase","getString","string","specialStr","index","indexOf","substring","getTime","time"],"sources":["/Users/zhangyanjun/react-project/mail/src/utils/index.tsx"],"sourcesContent":["/**\r\n *\r\n *  去除其他所有html标签\r\n * 删除空格换行\r\n * @param msg\r\n * @returns {XML|string|void}\r\n */\r\n\r\nexport function delHtmlTag(msg) {\r\n  msg = msg.replace(/<\\/?[^>]*>/g, '') //去除HTML Tag\r\n  msg = msg.replace(/[|]*\\n/, '') //去除行尾空格\r\n  msg = msg.replace(/&npsp;/gi, '') //去掉npsp\r\n  msg = msg.replace(/&amp;/gi, '') //去掉&\r\n  msg = msg.replace(/&quot;/gi, '') //去掉\"\r\n  msg = msg.replace(/&lt;/gi, '') //去掉<\r\n  msg = msg.replace(/&gt;/gi, '') //去掉>\r\n  msg = msg.replace(/[\\r\\n]/g, '') //去掉换行符\r\n  return msg\r\n}\r\n\r\n/**\r\n * 空判断\r\n * @param v\r\n * @returns {boolean}\r\n */\r\n\r\nexport function isEmpty(v) {\r\n  return (\r\n    v === undefined ||\r\n    v === null ||\r\n    v === '' ||\r\n    (Array.isArray(v) && v.length === 0) ||\r\n    (typeof v === 'object' && Object.keys(v).length === 0)\r\n  )\r\n}\r\n\r\n// 截取字符串的第一个中文字或者英文第一个字母\r\n\r\nexport function getFirstLetter(str) {\r\n  if (isEmpty(str)) {\r\n    return ''\r\n  }\r\n  let result = ''\r\n  const reg = /^[a-zA-Z]/\r\n  if (reg.test(str)) {\r\n    result = str.substr(0, 1).toUpperCase()\r\n  } else {\r\n    result = str.substr(0, 1)\r\n  }\r\n  return result\r\n}\r\n//获取指定字符串前面的字符\r\n\r\nexport const getString = (string, specialStr) => {\r\n  const index = string.indexOf(specialStr)\r\n  return string.substring(0, index)\r\n}\r\n\r\n//截取 2023-11-10 11:23:21\r\n\r\nexport const getTime = (time) => {\r\n  return time.substring(10)\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,UAAUA,CAACC,GAAG,EAAE;EAC9BA,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,EAAC;EACrCD,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAC;EAChCD,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAC;EAClCD,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,EAAC;EACjCD,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAC;EAClCD,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAC;EAChCD,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAC;EAChCD,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,EAAC;EACjC,OAAOD,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,OAAOA,CAACC,CAAC,EAAE;EACzB,OACEA,CAAC,KAAKC,SAAS,IACfD,CAAC,KAAK,IAAI,IACVA,CAAC,KAAK,EAAE,IACPE,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,IAAIA,CAAC,CAACI,MAAM,KAAK,CAAE,IACnC,OAAOJ,CAAC,KAAK,QAAQ,IAAIK,MAAM,CAACC,IAAI,CAACN,CAAC,CAAC,CAACI,MAAM,KAAK,CAAE;AAE1D;;AAEA;;AAEA,OAAO,SAASG,cAAcA,CAACC,GAAG,EAAE;EAClC,IAAIT,OAAO,CAACS,GAAG,CAAC,EAAE;IAChB,OAAO,EAAE;EACX;EACA,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,GAAG,GAAG,WAAW;EACvB,IAAIA,GAAG,CAACC,IAAI,CAACH,GAAG,CAAC,EAAE;IACjBC,MAAM,GAAGD,GAAG,CAACI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACzC,CAAC,MAAM;IACLJ,MAAM,GAAGD,GAAG,CAACI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3B;EACA,OAAOH,MAAM;AACf;AACA;;AAEA,OAAO,MAAMK,SAAS,GAAGA,CAACC,MAAM,EAAEC,UAAU,KAAK;EAC/C,MAAMC,KAAK,GAAGF,MAAM,CAACG,OAAO,CAACF,UAAU,CAAC;EACxC,OAAOD,MAAM,CAACI,SAAS,CAAC,CAAC,EAAEF,KAAK,CAAC;AACnC,CAAC;;AAED;;AAEA,OAAO,MAAMG,OAAO,GAAIC,IAAI,IAAK;EAC/B,OAAOA,IAAI,CAACF,SAAS,CAAC,EAAE,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}